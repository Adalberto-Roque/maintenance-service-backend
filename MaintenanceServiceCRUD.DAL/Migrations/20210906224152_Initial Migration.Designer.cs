// <auto-generated />
using System;
using MaintenanceServiceCRUD.DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MaintenanceServiceCRUD.DAL.Migrations
{
    [DbContext(typeof(ContextDb))]
    [Migration("20210906224152_Initial Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MaintenanceServiceCRUD.DAL.Models.Employee", b =>
                {
                    b.Property<short>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<short>("IdJob")
                        .HasColumnType("smallint");

                    b.Property<short?>("IdTruck")
                        .HasColumnType("smallint");

                    b.Property<string>("LastName")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdEmployee")
                        .HasName("PK_Employees_IdEmployee");

                    b.HasIndex("IdJob");

                    b.HasIndex("IdTruck");

                    b.ToTable("Employees", "Employees");
                });

            modelBuilder.Entity("MaintenanceServiceCRUD.DAL.Models.Job", b =>
                {
                    b.Property<short>("IdJob")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("IdJob")
                        .HasName("PK_Jobs_IdJob");

                    b.ToTable("Jobs", "Employees");
                });

            modelBuilder.Entity("MaintenanceServiceCRUD.DAL.Models.Truck", b =>
                {
                    b.Property<short>("IdTruck")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LicensePlate")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.HasKey("IdTruck")
                        .HasName("PK_Trucks_IdVehicle");

                    b.ToTable("Trucks", "Vehicles");
                });

            modelBuilder.Entity("MaintenanceServiceCRUD.DAL.Models.TruckMaintenanceService", b =>
                {
                    b.Property<int>("IdTruckMaintenanceServices")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("Dispatcher")
                        .HasColumnType("smallint");

                    b.Property<short>("Driver")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<short>("IdTruck")
                        .HasColumnType("smallint");

                    b.Property<byte>("IdTypeTruckMaintenanceService")
                        .HasColumnType("tinyint");

                    b.Property<short>("Mechanical")
                        .HasColumnType("smallint");

                    b.HasKey("IdTruckMaintenanceServices")
                        .HasName("PK_TruckMaintenanceServices_IdTruckMaintenanceServices");

                    b.HasIndex("Dispatcher");

                    b.HasIndex("Driver");

                    b.HasIndex("IdTruck");

                    b.HasIndex("IdTypeTruckMaintenanceService");

                    b.HasIndex("Mechanical");

                    b.ToTable("TruckMaintenanceServices", "MaintenanceServices");
                });

            modelBuilder.Entity("MaintenanceServiceCRUD.DAL.Models.TypeTruckMaintenanceService", b =>
                {
                    b.Property<byte>("IdTypeTruckMaintenanceService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeDescription")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("IdTypeTruckMaintenanceService")
                        .HasName("PK_TypeTruckMaintenanceServices_IdTypeTruckMaintenanceService");

                    b.ToTable("TypeTruckMaintenanceServices", "MaintenanceServices");
                });

            modelBuilder.Entity("MaintenanceServiceCRUD.DAL.Models.Employee", b =>
                {
                    b.HasOne("MaintenanceServiceCRUD.DAL.Models.Job", "IdJobNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdJob")
                        .IsRequired();

                    b.HasOne("MaintenanceServiceCRUD.DAL.Models.Truck", "IdTruckNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("IdTruck");

                    b.Navigation("IdJobNavigation");

                    b.Navigation("IdTruckNavigation");
                });

            modelBuilder.Entity("MaintenanceServiceCRUD.DAL.Models.TruckMaintenanceService", b =>
                {
                    b.HasOne("MaintenanceServiceCRUD.DAL.Models.Employee", "DispatcherNavigation")
                        .WithMany("TruckMaintenanceServiceDispatcherNavigations")
                        .HasForeignKey("Dispatcher")
                        .IsRequired();

                    b.HasOne("MaintenanceServiceCRUD.DAL.Models.Employee", "DriverNavigation")
                        .WithMany("TruckMaintenanceServiceDriverNavigations")
                        .HasForeignKey("Driver")
                        .IsRequired();

                    b.HasOne("MaintenanceServiceCRUD.DAL.Models.Truck", "IdTruckNavigation")
                        .WithMany("TruckMaintenanceServices")
                        .HasForeignKey("IdTruck")
                        .HasConstraintName("FK_TruckMaintenanceServices_Vehicles_IdTruck")
                        .IsRequired();

                    b.HasOne("MaintenanceServiceCRUD.DAL.Models.TypeTruckMaintenanceService", "IdTypeTruckMaintenanceServiceNavigation")
                        .WithMany("TruckMaintenanceServices")
                        .HasForeignKey("IdTypeTruckMaintenanceService")
                        .HasConstraintName("FK_TruckMaintenanceServices_Vehicles_IdTypeTruckMaintenanceService")
                        .IsRequired();

                    b.HasOne("MaintenanceServiceCRUD.DAL.Models.Employee", "MechanicalNavigation")
                        .WithMany("TruckMaintenanceServiceMechanicalNavigations")
                        .HasForeignKey("Mechanical")
                        .IsRequired();

                    b.Navigation("DispatcherNavigation");

                    b.Navigation("DriverNavigation");

                    b.Navigation("IdTruckNavigation");

                    b.Navigation("IdTypeTruckMaintenanceServiceNavigation");

                    b.Navigation("MechanicalNavigation");
                });

            modelBuilder.Entity("MaintenanceServiceCRUD.DAL.Models.Employee", b =>
                {
                    b.Navigation("TruckMaintenanceServiceDispatcherNavigations");

                    b.Navigation("TruckMaintenanceServiceDriverNavigations");

                    b.Navigation("TruckMaintenanceServiceMechanicalNavigations");
                });

            modelBuilder.Entity("MaintenanceServiceCRUD.DAL.Models.Job", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("MaintenanceServiceCRUD.DAL.Models.Truck", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("TruckMaintenanceServices");
                });

            modelBuilder.Entity("MaintenanceServiceCRUD.DAL.Models.TypeTruckMaintenanceService", b =>
                {
                    b.Navigation("TruckMaintenanceServices");
                });
#pragma warning restore 612, 618
        }
    }
}
